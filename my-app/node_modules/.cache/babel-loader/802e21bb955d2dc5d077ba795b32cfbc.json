{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/Nada/-blockchain-developer-bootcamp-final-project/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport VisiToken from \"./contracts/Vision.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst visiTokenAddress = \"0x5d5961a9D299ca0801133f19488510308935668c\";\n\nfunction App() {\n  _s();\n\n  const [maticAmount, setMaticAmount] = useState();\n  const [visiAmount, setVisiAmount] = useState();\n  const [visiAmountToSent, setVisiAmountToSend] = useState();\n  const [exchangeAmount, setExchangeAmount] = useState();\n  const [addressTo, setAddressTo] = useState();\n  let contract;\n  let provider;\n  let signer;\n  let address;\n  useEffect(() => {\n    getStarted();\n  }, []);\n\n  async function requestAccount() {\n    // Function to connect with user's MetaMask wallet\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n  }\n\n  async function getStarted() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const account = await requestAccount(); // Request MetaMask account\n\n      provider = new ethers.providers.Web3Provider(window.ethereum);\n      signer = provider.getSigner(); // Get the signer\n\n      address = await signer.getAddress();\n      console.log(\"Account:\", await signer.getAddress());\n      contract = new ethers.Contract(visiTokenAddress, VisiToken.abi); // Call the contract and pass in the smart contract address, abi & signer\n\n      let balance = await provider.getBalance(address);\n      console.log(balance);\n      setMaticAmount(ethers.utils.formatEther(balance).slice(0, 6));\n      await contract.balanceOf(address).then(balance => {\n        setVisiAmount(balance);\n      }); // let updatedWager = ethers.utils.parseEther(wager.toString()); // Convert wager state variable to ethers.js format\n      // const tx = await contract.newCoinToss({ value: updatedWager }); // Call the contract function and pass in the wager\n    }\n  }\n\n  async function sendEthToContract() {\n    await contract.transfer(visiTokenAddress, ethers.utils.formatEther(exchangeAmount)).then(result => console.log(\"success\", result)).catch(err => {\n      console.log(\"Failed with error: \" + err);\n    });\n    await contract.transfer(address, exchangeAmount).then(result => console.log(\"success\", result)).catch(err => {\n      console.log(\"Failed with error: \" + err);\n    });\n  }\n\n  async function sendVisiToAccount() {\n    const tx = await contract.transferFrom(address, addressTo, ethers.utils.formatEther(visiAmountToSent)).then(result => console.log(\"success\", result)).catch(err => {\n      console.log(\"Failed with error: \" + err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"VISI Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Hello This is your Matic balance \", maticAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"!! Please note this uses the Matic test network. Using any other network will result in lost funds. !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendEthToContract,\n        children: \"Get Visi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setExchangeAmount(e.target.value),\n        placeholder: \"Send your Matic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Hello This is your Visi balance \", visiAmount || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"!! Please note this uses the Matic test network. Using any other network will result in lost funds. !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendVisiToAccount,\n        children: \"Sent Visi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAddressTo(e.target.value),\n        placeholder: \"Address you want to sent Visi Too\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setVisiAmountToSend(e.target.value),\n        placeholder: \"Amount of Visi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DzHVuHBhC7VmtMkAf/M5MlWxtBE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/Nada/-blockchain-developer-bootcamp-final-project/my-app/src/App.js"],"names":["useState","useEffect","ethers","VisiToken","visiTokenAddress","App","maticAmount","setMaticAmount","visiAmount","setVisiAmount","visiAmountToSent","setVisiAmountToSend","exchangeAmount","setExchangeAmount","addressTo","setAddressTo","contract","provider","signer","address","getStarted","requestAccount","window","ethereum","request","method","account","providers","Web3Provider","getSigner","getAddress","console","log","Contract","abi","balance","getBalance","utils","formatEther","slice","balanceOf","then","sendEthToContract","transfer","result","catch","err","sendVisiToAccount","tx","transferFrom","e","target","value"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport VisiToken from \"./contracts/Vision.json\";\n\nconst visiTokenAddress = \"0x5d5961a9D299ca0801133f19488510308935668c\";\nfunction App() {\n  const [maticAmount, setMaticAmount] = useState();\n  const [visiAmount, setVisiAmount] = useState();\n  const [visiAmountToSent, setVisiAmountToSend] = useState();\n  const [exchangeAmount, setExchangeAmount] = useState();\n  const [addressTo, setAddressTo] = useState();\n\n  let contract;\n  let provider;\n\n  let signer;\n  let address;\n  useEffect(() => {\n    getStarted();\n  }, []);\n\n  async function requestAccount() {\n    // Function to connect with user's MetaMask wallet\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\n\n  async function getStarted() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const account = await requestAccount(); // Request MetaMask account\n      provider = new ethers.providers.Web3Provider(window.ethereum);\n      signer = provider.getSigner(); // Get the signer\n      address = await signer.getAddress();\n      console.log(\"Account:\", await signer.getAddress());\n      contract = new ethers.Contract(visiTokenAddress, VisiToken.abi); // Call the contract and pass in the smart contract address, abi & signer\n      let balance = await provider.getBalance(address);\n      console.log(balance);\n      setMaticAmount(ethers.utils.formatEther(balance).slice(0, 6));\n\n      await contract.balanceOf(address).then((balance) => {\n        setVisiAmount(balance);\n      });\n      // let updatedWager = ethers.utils.parseEther(wager.toString()); // Convert wager state variable to ethers.js format\n      // const tx = await contract.newCoinToss({ value: updatedWager }); // Call the contract function and pass in the wager\n    }\n  }\n\n  async function sendEthToContract() {\n    await contract\n      .transfer(visiTokenAddress, ethers.utils.formatEther(exchangeAmount))\n      .then((result) => console.log(\"success\", result))\n      .catch((err) => {\n        console.log(\"Failed with error: \" + err);\n      });\n    await contract\n      .transfer(address, exchangeAmount)\n      .then((result) => console.log(\"success\", result))\n      .catch((err) => {\n        console.log(\"Failed with error: \" + err);\n      });\n  }\n\n  async function sendVisiToAccount() {\n    const tx = await contract\n      .transferFrom(\n        address,\n        addressTo,\n        ethers.utils.formatEther(visiAmountToSent)\n      )\n      .then((result) => console.log(\"success\", result))\n      .catch((err) => {\n        console.log(\"Failed with error: \" + err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>VISI Token</h1>\n        <h4>Hello This is your Matic balance {maticAmount}</h4>\n        <p>\n          !! Please note this uses the Matic test network. Using any other\n          network will result in lost funds. !!\n        </p>\n        <button onClick={sendEthToContract}>Get Visi</button>\n\n        <input\n          onChange={(e) => setExchangeAmount(e.target.value)}\n          placeholder=\"Send your Matic\"\n        />\n\n        <br />\n        <br />\n        <br />\n        <h4>Hello This is your Visi balance {visiAmount || 0}</h4>\n        <p>\n          !! Please note this uses the Matic test network. Using any other\n          network will result in lost funds. !!\n        </p>\n        <button onClick={sendVisiToAccount}>Sent Visi</button>\n\n        <input\n          onChange={(e) => setAddressTo(e.target.value)}\n          placeholder=\"Address you want to sent Visi Too\"\n        />\n        <input\n          onChange={(e) => setVisiAmountToSend(e.target.value)}\n          placeholder=\"Amount of Visi\"\n        />\n      </header>\n    </div>\n  );\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}